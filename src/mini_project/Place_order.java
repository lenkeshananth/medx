/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mini_project;
import javax.swing.*;
import java.sql.*;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
/**
 *
 * @author MUGKESHANANTH
 */
public class Place_order extends javax.swing.JFrame {
    Connection con;
    Statement st;
    PreparedStatement ps;
    ResultSet rs;
    /**
     * Creates new form Place_order
     */
    public Place_order() {
        initComponents();
            try{
                    Class.forName("oracle.jdbc.OracleDriver");
                    //JOptionPane.showMessageDialog(this,"Driver Loaded!");
                    try {                  
                    con = DriverManager.getConnection("jdbc:oracle:thin:@LAPTOP-NQMMIOER:1522:orcl",
                            "scott","tiger");                     
                    //JOptionPane.showMessageDialog(this,"Connected to Oracle database!");
                }
                catch (SQLException ex) {
                    Logger.getLogger(Place_order.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this,ex.getMessage());
                    }
                    }
                    catch(ClassNotFoundException ex){
                    Logger.getLogger(Place_order.class.getName()).log(Level.SEVERE,null, ex);
                    JOptionPane.showMessageDialog(this,ex.getMessage());

                    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        medicinelist = new javax.swing.JComboBox<>();
        quantitylist = new javax.swing.JSpinner();
        AddtocartButton = new javax.swing.JButton();
        GotocartButton = new javax.swing.JButton();
        BackInventorybutton = new javax.swing.JButton();
        Fbutton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        medicinelist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicinelistActionPerformed(evt);
            }
        });
        jPanel1.add(medicinelist, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 150, 30));

        quantitylist.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                quantitylistAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jPanel1.add(quantitylist, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 170, 80, 30));

        AddtocartButton.setBackground(new java.awt.Color(153, 255, 255));
        AddtocartButton.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
        AddtocartButton.setForeground(new java.awt.Color(51, 51, 0));
        AddtocartButton.setText("Add to Cart");
        AddtocartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddtocartButtonActionPerformed(evt);
            }
        });
        jPanel1.add(AddtocartButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 140, -1));

        GotocartButton.setBackground(new java.awt.Color(153, 255, 255));
        GotocartButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        GotocartButton.setText("Go to Cart");
        GotocartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GotocartButtonActionPerformed(evt);
            }
        });
        jPanel1.add(GotocartButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 270, 140, -1));

        BackInventorybutton.setBackground(new java.awt.Color(255, 51, 51));
        BackInventorybutton.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
        BackInventorybutton.setText("Back");
        BackInventorybutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackInventorybuttonActionPerformed(evt);
            }
        });
        jPanel1.add(BackInventorybutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 90, 30));

        Fbutton.setFont(new java.awt.Font("Lucida Sans", 1, 10)); // NOI18N
        Fbutton.setText("F");
        Fbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FbuttonActionPerformed(evt);
            }
        });
        jPanel1.add(Fbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, 30, 30));

        jLabel4.setFont(new java.awt.Font("Lucida Sans", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 0, 51));
        jLabel4.setText("Pharamcy Order");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, -1, -1));

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel1.setText("Quantity :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 170, -1, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel3.setText("Medicine :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mini_project/bb.jpg"))); // NOI18N
        jLabel2.setToolTipText("");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel2.setPreferredSize(new java.awt.Dimension(700, 600));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 400));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GotocartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GotocartButtonActionPerformed
        // TODO add your handling code here:
                  this.dispose();

            // Open the homepage
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new Go_to_cart().setVisible(true);
                }
            });
    }//GEN-LAST:event_GotocartButtonActionPerformed

    private void BackInventorybuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackInventorybuttonActionPerformed
        // TODO add your handling code here:
                  this.dispose();

            // Open the homepage
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new Inventory().setVisible(true);
                }
            });
    }//GEN-LAST:event_BackInventorybuttonActionPerformed

    
// Define a helper class to hold medicine_id and name
//class MedicineItem {
//    int id;
//    String name;
//    
//        MedicineItem() {
//    }
//    
//    MedicineItem(int id, String name) {
//        this.id = id;
//        this.name = name;
//    }
//    
//    @Override
//    public String toString() {
//        return this.name;
//    }
//    
//    public int getId() {
//        return this.id;
//    }
//}
//    
    
    
    private void AddtocartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddtocartButtonActionPerformed
        // TODO add your handling code here:

    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    String selectedMedicineName = (String) medicinelist.getSelectedItem();
    int quantity = (Integer) quantitylist.getValue(); // Assuming quantitylist is a JSpinner

    if (selectedMedicineName != null && quantity > 0) {
        MedicineItem selectedMedicine = null;
        
        // Find the MedicineItem with the selected name
        for (MedicineItem item : medicineItems) {
            if (item.name.equals(selectedMedicineName)) {
                selectedMedicine = item;
                break;
            }
        }

        if (selectedMedicine != null) {
            //String sql = "INSERT INTO Orders (medicine_id, order_quantity, order_date) VALUES (?, ?, ?)";
             String sql = "INSERT INTO Orders (order_id, medicine_id, supplier_id, order_quantity, order_date) VALUES (?, ?, ?, ?, ?)";
            //Connection con = null;
            //PreparedStatement ps = null;

            try {

          con = DriverManager.getConnection("jdbc:oracle:thin:@LAPTOP-NQMMIOER:1522:orcl", "scott", "tiger");

                ps = con.prepareStatement(sql);
                // Generate a random order ID
                int orderId = new java.util.Random().nextInt(1000000);
                ps.setInt(1, orderId);
                ps.setInt(2, selectedMedicine.getId());
                ps.setNull(3, java.sql.Types.INTEGER); // supplier_id is null
                ps.setInt(4, quantity);
                ps.setDate(5, new java.sql.Date(System.currentTimeMillis())); // Use current date
                
                int rowsInserted = ps.executeUpdate();
                if (rowsInserted > 0) {
                    JOptionPane.showMessageDialog(null, "Medicine added to order successfully!");
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error adding medicine to order: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } finally {
                try {
                    if (ps != null) ps.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selected medicine not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select a medicine and enter a valid quantity.", "Warning", JOptionPane.WARNING_MESSAGE);
    }

    }//GEN-LAST:event_AddtocartButtonActionPerformed

    private void medicinelistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicinelistActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_medicinelistActionPerformed

    
    private List<MedicineItem> medicineItems = new ArrayList<>();
    private void FbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FbuttonActionPerformed
        // TODO add your handling code here:
    
    
    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;

    try {
        // Establish the database connection
        System.out.println("Establishing database connection...");
        con = DriverManager.getConnection("jdbc:oracle:thin:@LAPTOP-NQMMIOER:1522:orcl", "scott", "tiger");
        System.out.println("Database connection established.");

        // Create the SQL query to retrieve medicine items
        String query = "SELECT medicine_id, name FROM Medicine";

        // Prepare the statement
        System.out.println("Preparing SQL statement...");
        ps = con.prepareStatement(query);

        // Execute the query
        System.out.println("Executing query to retrieve medicine items...");
        rs = ps.executeQuery();

        // Iterate over the result set and append medicine items to the list
        System.out.println("Processing result set...");
        while (rs.next()) {
            int medicineId = rs.getInt("medicine_id");
            String name = rs.getString("name");
            MedicineItem medicineItem = new MedicineItem(medicineId, name);
            medicineItems.add(medicineItem);
        }
        System.out.println("Medicine items retrieved: " + medicineItems);

        // Remove all existing items in the combo box
        System.out.println("Clearing existing items in the combo box...");
        medicinelist.removeAllItems();

        // Add the retrieved medicine items to the combo box
        System.out.println("Adding medicine items to the combo box...");
        for (MedicineItem item : medicineItems) {
            medicinelist.addItem(item.name);
        }

    } catch (SQLException ex) {
        System.out.println("SQLException: " + ex.getMessage());
        ex.printStackTrace();
    } finally {
        // Close resources
        try {
            if (rs != null) rs.close();
            if (ps != null) ps.close();
            System.out.println("Resources closed after first query.");
        } catch (SQLException ex) {
            System.out.println("SQLException during resource cleanup: " + ex.getMessage());
            ex.printStackTrace();
        }
    }



    }//GEN-LAST:event_FbuttonActionPerformed

    private void quantitylistAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_quantitylistAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_quantitylistAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Place_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Place_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Place_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Place_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Place_order().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddtocartButton;
    private javax.swing.JButton BackInventorybutton;
    private javax.swing.JButton Fbutton;
    private javax.swing.JButton GotocartButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> medicinelist;
    private javax.swing.JSpinner quantitylist;
    // End of variables declaration//GEN-END:variables
}
